version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy Environement
          command: |
            EnvironmentName="udacity-${CIRCLE_WORKFLOW_ID}"
            aws cloudformation delete-stack --stack-name myStack-$EnvironmentName
          when: on_fail

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          command: |
            EnvironmentName="udacity-${CIRCLE_WORKFLOW_ID}"
            aws cloudformation deploy \
              --template-file ./cloudformation/ec2_create.yml \
              --stack-name myStack-$EnvironmentName \
              --parameter-overrides EnvironmentName=$EnvironmentName \
              --region us-east-1

  create_inventory_file:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          command: | 
            yum install -y openssh-client ca-certificates tar gzip git curl wget
      - run:
          command: | 
            echo "[node-web]" > ./ansible-playbook/inventory
            ec2TagValue="ec2-udacity-${CIRCLE_WORKFLOW_ID}"
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicDnsName' \
              --filters "Name=tag:Name,Values=$ec2TagValue" \
              --output text >> ./ansible-playbook/inventory
              cat ./ansible-playbook/inventory
      - persist_to_workspace:
          root: ./ansible-playbook/
          paths:
            - inventory

  configure_infrastructure:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "60:c0:71:46:12:0d:80:17:5f:08:c1:d8:2c:9f:7a:ef"
      - run:
          command: |
            pip install ansible
      - attach_workspace:
          at: ./ansible-playbook/
      - run:
          command: |
            cd ./ansible-playbook
            cat inventory
            ansible-playbook -i inventory remote_node_web.yml

  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          command: | 
            yum install -y openssh-client ca-certificates tar gzip git curl wget
      - checkout
      - attach_workspace:
          at: ./ansible-playbook/
      - run:
          name: smoke test
          command: |
            pwd
            ls
            cat ./ansible-playbook/inventory
            URL=$(grep "amazonaws" ./ansible-playbook/inventory)
            echo "URL"
            echo $URL
            # Test if website exists
            curl -s --head ${URL}
      - destroy_environment

workflows:
  create-deploy-infrastructure-cicd:
    jobs:
      - create_infrastructure
      - create_inventory_file:
          requires:
            - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_inventory_file
      - smoke_test:
          requires:
            - configure_infrastructure